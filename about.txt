 #YELP Camp
(Version 1)
* Add Landing Page
* Add Campgrounds Page that lists all campgrounds

Each Campground has:
* Name
* Image

#Layout and Basic Styling
* Create our header and footer partials
* Add in Bootsrap

#Creating New Campgrounds
*Setup new campground POST route
*Add in body-parser
*Setup route to show form
*Add basic unstyled form

#Style the Campgrounds Page
* Add a better header/title
* Make campgrounds dislplay in a grid

#Style the Navbar and Form
* Add a navbar to all templates
* Style the new campground form

#Add Mongoose
* Install and configure mongoose
* Setup camground model
* Use camground model inside of our routes!

#Show Page
* Review the RESTful routes we've seen so far
* Add description to our campground model
* Show db.collection.drop()
* Add a show route/template

RESTFUL ROUTES

name         url          verb	        desc
================================================================
INDEX       /dogs         GET           Display a list of all dogs
NEW	    /dogs/new     GET           Displays form to make a new dog
CREATE	    /dogs	  POST	        Add new dog to DB
SHOW        /dogs/:id     GET           Shows info about one dog

#Refactor Mongoose Code
* Create a models directory
* Use module.exports
* Require everything correctly!
 
#Add Seeds File
* Add a seeds.js file
* Run the seeds file every time the server starts

#Add the Comment Model!
* Make our errors go away!
* Display comments on campground show page

#Comment New/Create
* Discuss nested routes
* Add the comment new and create routes
* Add the new comment form

V5
#Style Show Page
* Add sidebar to show page
* Display comments nicely

#Finish Styling Show Page
* Add public directory
* Add custom stylesheet

#Auth Pt. 1 - Add User Model
* Install all packages needed for auth
* Define User model

#Auth Pt. 2 - Register
* Configure Passport
* Add register routes
* Add register template

#Auth Pt. 3 - Login
* Add login routes (2)
* Add login template w/ form

#Auth Pt. 4 - Logout/Navbar
* Add logout route
* Prevent user from adding a comment if not signed in
* Add links to navbar
* Show/hide auth links correctly

#Auth Pt. 5 - Show/Hide Links
* Show/hide auth links in navbar correctly

#Refactor The Routes
* Use Express router to reorganize all routes

#Users + Comments
* Associate users and commetns
* Save author's name to a comment automatically

#Users + Campgrounds
* Prevent an unauthenticated user from creating a campground
* Save username+id to newly created campground

#Editing Campgrounds
* Add Method-Override
* Add Edit Route for Campgrounds
* Add Link to Edit Page
* Add Update Route
* Fix $set problem

#Deleting Campgrounds
* Add Destroy Route
* Add Delete button

#Authorization Part 1: Campgrounds
* User can only edit his/her campgrounds
* User can only delete his/her campgrounds
* Hide/Show edit and delete buttons
======================================================================================================
Authentication - Finding out if someone is who they say they are.
Authorization - Once you know who someone is you figure out what they are allowed to do. (permissions) 
======================================================================================================

#Editing Comments
* Add Edit route for comments
* Add Edit button
* Add Update route

#Deleting Commments
* Add Destroy route
* Add Delete button

#Authorization Part 2: Comments
* User can only edit his/her comments
* User can only delete his/her comments
* Hide/Show edit and delete buttons
* Refactor Middleware

#Adding in Flash!
* Demo working version
* Install and configure connect -flash
* Add bootstrap alerts to header

========================================================
==========   mongod --bind_ip=$IP --nojournal   ========
========================================================

#Refactoring the UI for YelpCamp Login and Sign Up pages
* Use Bootstrap to style the login & sign up views
* Update the nav-bar menu
	- Convert .container-fluid to regular .container
	- Add conditional active class to menu list items
 	- Add collapsable hamburger menu
	- Make site responsive for mobile
* Fix registration flash message bug

#Installing Google Maps API Key
* Sign up for a google developer account
* Get Google Maps API Key
* Add Google Maps scripts to your application
* Display the campground location in show.ejs
* Update campground Model
* Update new and edit forms
	- Add location input field
* Update campground routes

# Adding a "Time Since" feature using Moment JS
* Install moment JS
* Require moment and add it to app.locals
* Update campground and comment models
* Use momoent in your show.ejs file

